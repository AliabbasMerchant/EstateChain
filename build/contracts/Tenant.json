{
  "contractName": "Tenant",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_main_owner",
          "type": "address"
        },
        {
          "name": "_sqFt",
          "type": "uint256"
        },
        {
          "name": "_boughtAtValuePerSqFt",
          "type": "uint256"
        },
        {
          "name": "_sellValPerSqFt",
          "type": "uint256"
        },
        {
          "name": "_rentValPerSqFtPerDay",
          "type": "uint256"
        }
      ],
      "name": "newProperty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "token2Owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_propId",
          "type": "uint256"
        }
      ],
      "name": "calcRentPerSqFtPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "name": "propId",
          "type": "uint256"
        },
        {
          "name": "boughtAtValuePerSqFt",
          "type": "uint256"
        },
        {
          "name": "sellValPerSqFt",
          "type": "uint256"
        },
        {
          "name": "rentValPerSqFtPerDay",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_newRentValPerSqFtPerDay",
          "type": "uint256"
        }
      ],
      "name": "setRentValPerSqFtPerDay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_propId",
          "type": "uint256"
        },
        {
          "name": "_newDocsHash",
          "type": "string"
        }
      ],
      "name": "changeDocsHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "setMainOwnerSharePercentage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_newSellValPerSqFt",
          "type": "uint256"
        }
      ],
      "name": "setSellValPerSqFt",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mainOwnerSharePercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_propId",
          "type": "uint256"
        },
        {
          "name": "_newSqFt",
          "type": "uint256"
        }
      ],
      "name": "increaseArea",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "property2MainOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "props",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "sqFt",
          "type": "uint256"
        },
        {
          "name": "rentedAtValue",
          "type": "uint256"
        },
        {
          "name": "rentedBy",
          "type": "address"
        },
        {
          "name": "rentedUntil",
          "type": "uint256"
        },
        {
          "name": "docsHash",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "rentVal",
          "type": "uint256"
        }
      ],
      "name": "e_rental",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "mainOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "sqFt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "propId",
          "type": "uint256"
        }
      ],
      "name": "NewProperty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x6080604052600a600555336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3611387806100d46000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630175bc26146100eb5780631dca7fcf1461019c5780633c0d2db4146102095780634f64b2be1461024a578063594a4524146102a0578063672799e9146102d7578063715018a61461031c57806383f85d3b146103335780638da5cb5b146103605780638f32d59b146103b75780639c130474146103e65780639efb887f1461041d578063cd49912814610448578063dea6a04b1461047f578063f2fde38b146104ec578063fda54c161461052f575b600080fd5b3480156100f757600080fd5b5061019a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610689565b005b3480156101a857600080fd5b506101c7600480360381019080803590602001909291905050506109f1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021557600080fd5b5061023460048036038101908080359060200190929190505050610a24565b6040518082815260200191505060405180910390f35b34801561025657600080fd5b5061027560048036038101908080359060200190929190505050610ad8565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156102ac57600080fd5b506102d56004803603810190808035906020019092919080359060200190929190505050610b17565b005b3480156102e357600080fd5b5061031a60048036038101908080359060200190929190803590602001908201803590602001919091929391929390505050610baf565b005b34801561032857600080fd5b50610331610c53565b005b34801561033f57600080fd5b5061035e60048036038101908080359060200190929190505050610d25565b005b34801561036c57600080fd5b50610375610d42565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103c357600080fd5b506103cc610d6b565b604051808215151515815260200191505060405180910390f35b3480156103f257600080fd5b5061041b6004803603810190808035906020019092919080359060200190929190505050610dc2565b005b34801561042957600080fd5b50610432610e5a565b6040518082815260200191505060405180910390f35b34801561045457600080fd5b5061047d6004803603810190808035906020019092919080359060200190929190505050610e60565b005b34801561048b57600080fd5b506104aa60048036038101908080359060200190929190505050610f04565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104f857600080fd5b5061052d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f37565b005b34801561053b57600080fd5b5061055a60048036038101908080359060200190929190505050610f56565b60405180806020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200180602001838103835289818151815260200191508051906020019080838360005b838110156105e25780820151818401526020810190506105c7565b50505050905090810190601f16801561060f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561064857808201518184015260208101905061062d565b50505050905090810190601f1680156106755780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6000806000610696610d6b565b15156106a157600080fd5b6001600260c0604051908101604052808c81526020018a815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016020604051908101604052806000815250815250908060018154018082558091505090600182039060005260206000209060060201600090919290919091506000820151816000019080519060200190610743929190611236565b50602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050190805190602001906107c5929190611236565b505050039250876004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f1ef7277f4643471582713ead0a4c4673adc2449aa6000b727480ac8a8e06c84c8989898660405180806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156108c05780820151818401526020810190506108a5565b50505050905090810190601f1680156108ed5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1600091505b868210156109e6576001806080604051908101604052808681526020018981526020018881526020018781525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001556020820151816001015560408201518160020155606082015181600301555050039050876003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508180600101925050610902565b505050505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000809150600090505b600180549050811015610a995783600182815481101515610a4e57fe5b9060005260206000209060040201600001541415610a8c57600181815481101515610a7557fe5b906000526020600020906004020160030154820191505b8080600101915050610a31565b610acc600285815481101515610aab57fe5b906000526020600020906006020160010154836110f190919063ffffffff16565b91508192505050919050565b600181815481101515610ae757fe5b90600052602060002090600402016000915090508060000154908060010154908060020154908060030154905084565b816003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b8557600080fd5b81600184815481101515610b9557fe5b906000526020600020906004020160030181905550505050565b826004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1d57600080fd5b8282600286815481101515610c2e57fe5b90600052602060002090600602016005019190610c4c9291906112b6565b5050505050565b610c5b610d6b565b1515610c6657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610d2d610d6b565b1515610d3857600080fd5b8060058190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b816003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e3057600080fd5b81600184815481101515610e4057fe5b906000526020600020906004020160020181905550505050565b60055481565b6000806000610e6d610d6b565b1515610e7857600080fd5b600285815481101515610e8757fe5b90600052602060002090600602016001015492508284111515610ea957600080fd5b83600286815481101515610eb957fe5b906000526020600020906006020160010181905550610ee1838561111b90919063ffffffff16565b9150600090505b81811015610efd578080600101915050610ee8565b5050505050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f3f610d6b565b1515610f4a57600080fd5b610f538161113c565b50565b600281815481101515610f6557fe5b9060005260206000209060060201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110115780601f10610fe657610100808354040283529160200191611011565b820191906000526020600020905b815481529060010190602001808311610ff457829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806004015490806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110e75780601f106110bc576101008083540402835291602001916110e7565b820191906000526020600020905b8154815290600101906020018083116110ca57829003601f168201915b5050505050905086565b60008060008311151561110357600080fd5b828481151561110e57fe5b0490508091505092915050565b60008083831115151561112d57600080fd5b82840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561117857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061127757805160ff19168380011785556112a5565b828001600101855582156112a5579182015b828111156112a4578251825591602001919060010190611289565b5b5090506112b29190611336565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106112f757803560ff1916838001178555611325565b82800160010185558215611325579182015b82811115611324578235825591602001919060010190611309565b5b5090506113329190611336565b5090565b61135891905b8082111561135457600081600090555060010161133c565b5090565b905600a165627a7a72305820814740759533b414d1cb6f20a6e269d704ff50b866af424f616b0a3c3bf549c60029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630175bc26146100eb5780631dca7fcf1461019c5780633c0d2db4146102095780634f64b2be1461024a578063594a4524146102a0578063672799e9146102d7578063715018a61461031c57806383f85d3b146103335780638da5cb5b146103605780638f32d59b146103b75780639c130474146103e65780639efb887f1461041d578063cd49912814610448578063dea6a04b1461047f578063f2fde38b146104ec578063fda54c161461052f575b600080fd5b3480156100f757600080fd5b5061019a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610689565b005b3480156101a857600080fd5b506101c7600480360381019080803590602001909291905050506109f1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021557600080fd5b5061023460048036038101908080359060200190929190505050610a24565b6040518082815260200191505060405180910390f35b34801561025657600080fd5b5061027560048036038101908080359060200190929190505050610ad8565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156102ac57600080fd5b506102d56004803603810190808035906020019092919080359060200190929190505050610b17565b005b3480156102e357600080fd5b5061031a60048036038101908080359060200190929190803590602001908201803590602001919091929391929390505050610baf565b005b34801561032857600080fd5b50610331610c53565b005b34801561033f57600080fd5b5061035e60048036038101908080359060200190929190505050610d25565b005b34801561036c57600080fd5b50610375610d42565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103c357600080fd5b506103cc610d6b565b604051808215151515815260200191505060405180910390f35b3480156103f257600080fd5b5061041b6004803603810190808035906020019092919080359060200190929190505050610dc2565b005b34801561042957600080fd5b50610432610e5a565b6040518082815260200191505060405180910390f35b34801561045457600080fd5b5061047d6004803603810190808035906020019092919080359060200190929190505050610e60565b005b34801561048b57600080fd5b506104aa60048036038101908080359060200190929190505050610f04565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104f857600080fd5b5061052d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f37565b005b34801561053b57600080fd5b5061055a60048036038101908080359060200190929190505050610f56565b60405180806020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200180602001838103835289818151815260200191508051906020019080838360005b838110156105e25780820151818401526020810190506105c7565b50505050905090810190601f16801561060f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561064857808201518184015260208101905061062d565b50505050905090810190601f1680156106755780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6000806000610696610d6b565b15156106a157600080fd5b6001600260c0604051908101604052808c81526020018a815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016020604051908101604052806000815250815250908060018154018082558091505090600182039060005260206000209060060201600090919290919091506000820151816000019080519060200190610743929190611236565b50602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050190805190602001906107c5929190611236565b505050039250876004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f1ef7277f4643471582713ead0a4c4673adc2449aa6000b727480ac8a8e06c84c8989898660405180806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156108c05780820151818401526020810190506108a5565b50505050905090810190601f1680156108ed5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1600091505b868210156109e6576001806080604051908101604052808681526020018981526020018881526020018781525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001556020820151816001015560408201518160020155606082015181600301555050039050876003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508180600101925050610902565b505050505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000809150600090505b600180549050811015610a995783600182815481101515610a4e57fe5b9060005260206000209060040201600001541415610a8c57600181815481101515610a7557fe5b906000526020600020906004020160030154820191505b8080600101915050610a31565b610acc600285815481101515610aab57fe5b906000526020600020906006020160010154836110f190919063ffffffff16565b91508192505050919050565b600181815481101515610ae757fe5b90600052602060002090600402016000915090508060000154908060010154908060020154908060030154905084565b816003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b8557600080fd5b81600184815481101515610b9557fe5b906000526020600020906004020160030181905550505050565b826004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1d57600080fd5b8282600286815481101515610c2e57fe5b90600052602060002090600602016005019190610c4c9291906112b6565b5050505050565b610c5b610d6b565b1515610c6657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610d2d610d6b565b1515610d3857600080fd5b8060058190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b816003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e3057600080fd5b81600184815481101515610e4057fe5b906000526020600020906004020160020181905550505050565b60055481565b6000806000610e6d610d6b565b1515610e7857600080fd5b600285815481101515610e8757fe5b90600052602060002090600602016001015492508284111515610ea957600080fd5b83600286815481101515610eb957fe5b906000526020600020906006020160010181905550610ee1838561111b90919063ffffffff16565b9150600090505b81811015610efd578080600101915050610ee8565b5050505050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f3f610d6b565b1515610f4a57600080fd5b610f538161113c565b50565b600281815481101515610f6557fe5b9060005260206000209060060201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110115780601f10610fe657610100808354040283529160200191611011565b820191906000526020600020905b815481529060010190602001808311610ff457829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806004015490806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110e75780601f106110bc576101008083540402835291602001916110e7565b820191906000526020600020905b8154815290600101906020018083116110ca57829003601f168201915b5050505050905086565b60008060008311151561110357600080fd5b828481151561110e57fe5b0490508091505092915050565b60008083831115151561112d57600080fd5b82840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561117857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061127757805160ff19168380011785556112a5565b828001600101855582156112a5579182015b828111156112a4578251825591602001919060010190611289565b5b5090506112b29190611336565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106112f757803560ff1916838001178555611325565b82800160010185558215611325579182015b82811115611324578235825591602001919060010190611309565b5b5090506113329190611336565b5090565b61135891905b8082111561135457600081600090555060010161133c565b5090565b905600a165627a7a72305820814740759533b414d1cb6f20a6e269d704ff50b866af424f616b0a3c3bf549c60029",
  "sourceMap": "85:1566:4:-;;;202:2:6;163:41;;559:10:2;550:6;;:19;;;;;;;;;;;;;;;;;;618:6;;;;;;;;;;;585:40;;614:1;585:40;;;;;;;;;;;;85:1566:4;;;;;;",
  "deployedSourceMap": "85:1566:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:584:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;822:584:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;713:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;713:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:388:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;213:388:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;655:21:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;655:21:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1426:193:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1426:193:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;974:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:140:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1401:140:2;;;;;;213:131:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;213:131:6;;;;;;;;;;;;;;;;;;;;;;;;;;699:78:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;699:78:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1029:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1029:91:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:169:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1249:169:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;163:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;163:41:6;;;;;;;;;;;;;;;;;;;;;;;352:334;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:334:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:50:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1715:109:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1715:109:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:23:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;683:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;683:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;683:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:584;994:11;1197:6;1240:7;908:9:2;:7;:9::i;:::-;900:18;;;;;;;;1067:1:5;1008:5;1019:44;;;;;;;;;1028:5;1019:44;;;;1035:5;1019:44;;;;1042:1;1019:44;;;;1053:1;1019:44;;;;;;1057:1;1019:44;;;;;;;;;;;;;;;;;;;;1008:56;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1008:56:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:60;994:74;;1108:11;1079:18;:26;1098:6;1079:26;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1135:46;1147:5;1154:11;1167:5;1174:6;1135:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1135:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:1;1197:10;;1192:207;1213:5;1209:1;:9;1192:207;;;1342:1;1250:6;1262:76;;;;;;;;;1268:6;1262:76;;;;1276:21;1262:76;;;;1299:15;1262:76;;;;1316:21;1262:76;;;1250:89;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1250:89:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:93;1240:103;;1376:11;1358;:15;1370:2;1358:15;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1220:3;;;;;;;1192:207;;;822:584;;;;;;;;;:::o;713:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;213:388:7:-;273:4;290:11;321:6;304:1;290:15;;330:1;321:10;;316:197;337:6;:13;;;;333:1;:17;316:197;;;405:7;385:6;392:1;385:9;;;;;;;;;;;;;;;;;;;;:16;;;:27;381:121;;;456:6;463:1;456:9;;;;;;;;;;;;;;;;;;;;:30;;;446:40;;;;381:121;352:3;;;;;;;316:197;;;537:31;548:5;554:7;548:14;;;;;;;;;;;;;;;;;;;;:19;;;537:6;:10;;:31;;;;:::i;:::-;523:46;;587:6;580:13;;213:388;;;;;:::o;655:21:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1426:193:6:-;1526:8;1201:11;:21;1213:8;1201:21;;;;;;;;;;;;;;;;;;;;;1187:35;;:10;:35;;;1179:44;;;;;;;;1587:24;1547:6;1554:8;1547:16;;;;;;;;;;;;;;;;;;;;:37;;:64;;;;1426:193;;;:::o;974:150::-;1058:7;770:18;:31;789:11;770:31;;;;;;;;;;;;;;;;;;;;;756:45;;:10;:45;;;748:54;;;;;;;;1104:12;;1078:5;1084:7;1078:14;;;;;;;;;;;;;;;;;;;;:23;;:38;;;;;;;:::i;:::-;;974:150;;;;:::o;1401:140:2:-;908:9;:7;:9::i;:::-;900:18;;;;;;;;1500:1;1463:40;;1484:6;;;;;;;;;;;1463:40;;;;;;;;;;;;1531:1;1514:6;;:19;;;;;;;;;;;;;;;;;;1401:140::o;213:131:6:-;908:9:2;:7;:9::i;:::-;900:18;;;;;;;;325:11:6;298:24;:38;;;;213:131;:::o;699:78:2:-;736:7;763:6;;;;;;;;;;;756:13;;699:78;:::o;1029:91::-;1068:4;1106:6;;;;;;;;;;;1092:20;;:10;:20;;;1085:27;;1029:91;:::o;1249:169:6:-;1337:8;1201:11;:21;1213:8;1201:21;;;;;;;;;;;;;;;;;;;;;1187:35;;:10;:35;;;1179:44;;;;;;;;1392:18;1358:6;1365:8;1358:16;;;;;;;;;;;;;;;;;;;;:31;;:52;;;;1249:169;;;:::o;163:41::-;;;;:::o;352:334::-;433:12;557:10;607:6;908:9:2;:7;:9::i;:::-;900:18;;;;;;;;448:5:6;454:7;448:14;;;;;;;;;;;;;;;;;;;;:19;;;433:34;;497:7;486:8;:18;478:27;;;;;;;;538:8;516:5;522:7;516:14;;;;;;;;;;;;;;;;;;;;:19;;:30;;;;570:21;583:7;570:8;:12;;:21;;;;:::i;:::-;557:34;;616:1;607:10;;602:77;623:5;619:1;:9;602:77;;;630:3;;;;;;;602:77;;;352:334;;;;;:::o;763:50:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;1715:109:2:-;908:9;:7;:9::i;:::-;900:18;;;;;;;;1788:28;1807:8;1788:18;:28::i;:::-;1715:109;:::o;683:23:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1489:303:3:-;1547:7;1659:9;1646:1;1642;:5;1634:14;;;;;;;;1675:1;1671;:5;;;;;;;;1659:17;;1783:1;1776:8;;1489:303;;;;;:::o;2351:150::-;2409:7;2455:9;2442:1;2437;:6;;2429:15;;;;;;;;2471:1;2467;:5;2455:17;;2492:1;2485:8;;2351:150;;;;;:::o;1971:187:2:-;2065:1;2045:22;;:8;:22;;;;2037:31;;;;;;;;2113:8;2084:38;;2105:6;;;;;;;;;;;2084:38;;;;;;;;;;;;2142:8;2133:6;;:17;;;;;;;;;;;;;;;;;;1971:187;:::o;85:1566:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\r\n\r\nimport \"./SafeMath.sol\";\r\nimport \"./TokenRental.sol\";\r\n\r\ncontract Tenant is TokenRental {\r\n    using SafeMath for uint256;\r\n\r\n//    function getRental(uint _propId, uint _rentedUntil) public\r\n//    {\r\n//        if (now > props[_propId].rentedUntil)\r\n//        {\r\n//            props[_propId].rentedBy = msg.sender;\r\n//            props[_propId].rentedUntil = _rentedUntil;\r\n//        }\r\n//        uint rentalVal = props[propId].rentedAtValue;\r\n//        uint ownerShare = mainOwnerSharePercentage/100 * rentalVal;\r\n//        rentalVal = rentalVal - ownerShare;\r\n//        rentalVal = rentalVal.div(props[propId].sqFt);\r\n//        //Mapping Code\r\n//        mapping(address => uint) owner_list;\r\n//        address[] owners;\r\n//        Token[] token_list;\r\n//        for (uint i = 0; i < result.length; i++)\r\n//        {\r\n//            address owner = token2owner[result[i]];\r\n//            if (owner_list[owner])\r\n//            {\r\n//                token_list.push(result[i]);\r\n//                owners.push(owner);\r\n//                owner_list[owner] = 0;\r\n//            }\r\n//            else\r\n//            {\r\n//                owner_list[owner] = owner_list[owner] + 1;\r\n//            }\r\n//        }\r\n//        //Rental Calc\r\n//        for (uint i = 0; i < owners.length; i++)\r\n//        {\r\n//            uint share = owners_list[owners[i]];\r\n//            rentalVal = rentalVal.mul(share);\r\n//            transferRent(owner[i], rentalVal);\r\n//        }\r\n//    }\r\n//\r\n//    function transferRent(address to, uint value) payable public {\r\n//        balances[msg.sender] -= value;\r\n//        to.transfer(value);\r\n//    }\r\n}",
  "sourcePath": "E:\\projects_workspaces\\competitions\\GlobalBlockchainHackathon\\EstateChain\\contracts\\Tenant.sol",
  "ast": {
    "absolutePath": "/E/projects_workspaces/competitions/GlobalBlockchainHackathon/EstateChain/contracts/Tenant.sol",
    "exportedSymbols": {
      "Tenant": [
        661
      ]
    },
    "id": 662,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 653,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/E/projects_workspaces/competitions/GlobalBlockchainHackathon/EstateChain/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 654,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 652,
        "src": "28:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/projects_workspaces/competitions/GlobalBlockchainHackathon/EstateChain/contracts/TokenRental.sol",
        "file": "./TokenRental.sol",
        "id": 655,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 1027,
        "src": "54:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 656,
              "name": "TokenRental",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1026,
              "src": "104:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenRental_$1026",
                "typeString": "contract TokenRental"
              }
            },
            "id": 657,
            "nodeType": "InheritanceSpecifier",
            "src": "104:11:4"
          }
        ],
        "contractDependencies": [
          358,
          798,
          956,
          1026
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 661,
        "linearizedBaseContracts": [
          661,
          1026,
          956,
          798,
          358
        ],
        "name": "Tenant",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 660,
            "libraryName": {
              "contractScope": null,
              "id": 658,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 651,
              "src": "129:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$651",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "123:27:4",
            "typeName": {
              "id": 659,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "142:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          }
        ],
        "scope": 662,
        "src": "85:1566:4"
      }
    ],
    "src": "0:1651:4"
  },
  "legacyAST": {
    "absolutePath": "/E/projects_workspaces/competitions/GlobalBlockchainHackathon/EstateChain/contracts/Tenant.sol",
    "exportedSymbols": {
      "Tenant": [
        661
      ]
    },
    "id": 662,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 653,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/E/projects_workspaces/competitions/GlobalBlockchainHackathon/EstateChain/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 654,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 652,
        "src": "28:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/projects_workspaces/competitions/GlobalBlockchainHackathon/EstateChain/contracts/TokenRental.sol",
        "file": "./TokenRental.sol",
        "id": 655,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 1027,
        "src": "54:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 656,
              "name": "TokenRental",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1026,
              "src": "104:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenRental_$1026",
                "typeString": "contract TokenRental"
              }
            },
            "id": 657,
            "nodeType": "InheritanceSpecifier",
            "src": "104:11:4"
          }
        ],
        "contractDependencies": [
          358,
          798,
          956,
          1026
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 661,
        "linearizedBaseContracts": [
          661,
          1026,
          956,
          798,
          358
        ],
        "name": "Tenant",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 660,
            "libraryName": {
              "contractScope": null,
              "id": 658,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 651,
              "src": "129:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$651",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "123:27:4",
            "typeName": {
              "id": 659,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "142:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          }
        ],
        "scope": 662,
        "src": "85:1566:4"
      }
    ],
    "src": "0:1651:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-12-21T15:11:31.064Z"
}